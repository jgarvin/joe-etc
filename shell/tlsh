#!/bin/env zsh

# Need to run as ksh to work correctly
if [[ -a ~/.profile ]]; then
	SHELL=/bin/ksh source ~/.profile
fi

# Try to use .zhistory on local box before resorting to using the network
if [[ "$HOST" == "udesktop178" ]]; then
	export HISTFILE=/export/home/joeg/.zhistory
else
	if [[ -a /home/udesktop178/joeg/.zhistory ]]; then
		export HISTFILE=/home/udesktop178/joeg/.zhistory
	else
		export HISTFILE=$HOME/.zhistory
	fi
fi

if [[ `uname -s` = "SunOS" ]]; then
	# Without this I don't get psrinfo
	export PATH=$PATH:/usr/sbin
fi

export DS_DOMAIN="test"

# Use terminfo from the last century
if [[ -d "/opt/tradelink/share/terminfo" ]]; then
	export TERMINFO=/opt/tradelink/share/terminfo
else
	if [[ -d "/opt/app/nonc++/ncurses-5.7/share/terminfo" ]]; then
		export TERMINFO=/opt/app/nonc++/ncurses-5.7/share/terminfo
	else
		if [[ -d "/export/home/joeg/ncurses-install/share/terminfo" ]]; then
			export TERMINFO=/export/home/joeg/ncurses-install/share/terminfo
		fi
	fi
fi

cdl()
{
	hostname=$(hostname)
	if [[ -a /home/$hostname/joeg ]]; then
		cd /home/$hostname/joeg
	else
		echo "Creating /home/$hostname/joeg"
		sudo mkdir /home/$hostname/joeg
		sudo chgrp develop /home/$hostname/joeg
		sudo chown joeg /home/$hostname/joeg
		cd /home/$hostname/joeg
	fi
}

# 'ls' output is easier to read when colored
if which gls &> /dev/null # Use GNU ls if available
then
	alias ls='gls --color=auto'
else
	alias ls='ls --color=auto'
fi

if which gfind &> /dev/null # Use GNU ls if available
then
	alias find='gfind'
fi

if which gmake &> /dev/null # Use GNU make if available
then
	alias make='gmake'
fi

if which ggrep &> /dev/null # Use GNU grep if available
then
	alias grep='ggrep --color=auto'
fi

if which gawk &> /dev/null # Use GNU awk if available
then
	alias awk='gawk'
fi

if which gsed &> /dev/null # Use GNU sed if available
then
	alias sed='gsed'
fi

if which gsleep &> /dev/null # Use GNU sed if available
then
	alias sleep='gsleep'
fi

if which gtar &> /dev/null # Use GNU tar if available
then
	alias tar='gtar'
fi

# Try to use .zhistory on local box before resorting to using the network
if [[ `basename $SHELL` = "zsh" ]]; then
	if [[ -a /home/udesktop178/joeg/.zshcache ]]; then
		zstyle ':completion:*' cache-path /home/udesktop178/joeg/.zshcache
	else
		zstyle ':completion:*' cache-path $HOME/.zshcache
	fi
fi

# Harmless over LAN on modern CPUs, and very useful when logged into london.
alias ssh="ssh -C"

# By default SQL is pants on head stupid about keyboard shortcuts
# and arrow keys. rlwrap fixes that.
if which rlwrap &> /dev/null
then
    alias sql='rlwrap sql'
	alias isql='rlwrap isql'
else
	echo "rlwrap not available, so you're stuck with bare sql." >&2
fi

testinstr()
{
	echo "ICACHE:"
	DS_DOMAIN=wslave2a ./mfquery $1 $2 $3 $4 $5 $6 ASK_PRICE BID_PRICE CLOSE_DATE CLOSE_PRICE LAST_PRICE LAST_TIME PREV_DAY_CLOSE_PRICE PREV_DAY_CLOSE_DATE --marketFeedMethod=ICACHE --quit_on_snapshot
	echo "WOMBAT:"
	DS_DOMAIN=wslave2a ./mfquery $1 $2 $3 $4 $5 $6 ASK_PRICE BID_PRICE CLOSE_DATE CLOSE_PRICE LAST_PRICE LAST_TIME PREV_DAY_CLOSE_PRICE PREV_DAY_CLOSE_DATE --marketFeedMethod=WOMBAT --quit_on_snapshot 2> /dev/null
}

# Use newer sybase
export PATH=/opt/app/sybase15/OCS-15_0/bin:$PATH

# icache_wombat eats all my memory when compiled with multiple CPUs
tlsh_file_name=$0
tlmake()
{
    if [[ `basename $PWD` = "icache_wombat" ]]; then;
        echo "Running with 1 CPU. See $tlsh_file_name"

        disable -f tlmake
        MAKEFLAGS=-j1 tlmake
        enable -f tlmake
    fi
}
