(md-make-snippets
 '(derived-mode-p 'c++-mode)
 '(
   ("C array" "$1[$2]")
   ("align as" "alignas($1)")
   ("align of" "alignof($1)")
   ("and" "$1 && $2")
   ("array" "std::array<$1, $2>")
   ("assert" "assert($1);")
   ("assign" "$1 = $2;")
   ("auto" "auto $1 = $2;")
   ("back inserter" "std::back_inserter($1)")
   ("begin" "std::begin($1)")
   ("bit set" "std::bitset<$1>")
   ("boost" "bxxst::")
   ("catch" "catch($1) {\n    $2;\n}")
   ("case" "case $1:\n    $2;\n    break;")
   ("class" "class $1 : $2\n{\npublic:\n\nprivate:\n\n};")
   ("comment" "// $1")
   ("const cast" "const_cast<$1>($2)")
   ("const method sig" "$1 $1::$2($3) const;")
   ("const ref" "const $1&")
   ("const" "const $1")
   ("constexper" "constexpr $1")
   ("copy" "std::copy($1, $2, $3);")
   ("debug block" "if(DEBUG_OUTPUT) {\n    $1;\n}")
   ("debug see err" "if(DEBUG_OUTPUT) {\n    std::cerr << $1 << std::endl;\n}")
   ("debug see out" "if(DEBUG_OUTPUT) {\n    std::out << $1 << std::endl;\n}")
   ("decl type" "decltype($1)")
   ("decl val" "std::declval<$1>()")
   ("delete" "delete $1;")
   ("decay" "std::decay_t<$1>")
   ("deque" "std::deque<$1>")
   ("do while" "do {\n    $1;\n} while($2);")
   ("dynamic cast" "dynamic_cast<$1>($2)")
   ("ellipses" "$1...")
   ("else" "else {\n    $1;\n}")
   ("enable if" "std::enable_if_t<$1>")
   ("end" "std::end($1)")
   ("E numb" "enum $1 {\n    $2,\n};")
   ("equals" "$1 == $2")
   ("find" "std::find($1, $2, $3)")
   ("for each" "for(auto& $1 : $2) {\n    $3;\n}")
   ("for" "for($1; $2; $3) {\n    $4;\n}")
   ("forward" "std::forward<$1>($2)")
   ("forward as tuple" "std::forward_as_tuple($1)")
   ("friend class" "friend class $1;")
   ("function deaf" "$1 $2($3)\n{\n    $4;\n}")
   ("operator deaf" "$1 operator$2($3)\n{\n    $4;\n}")
   ("function" "std::function<$1($2)>")
   ("function signature" "$1 $2($3);")
   ("get" "std::get<$2>($1)")
   ("glob comment" "/* $1 */")
   ("hash" "std::hash<$1>($2)")
   ("header guard" "#ifndef $1\n#define $2\n\n$3\n\n#endif")
   ("if" "if($1) {\n    $2;\n}")
   ("include" "#include <$1>")
   ("index sequence" "std::index_sequence<$1>")
   ("init var" "$1 $2 = $3;")
   ("inline" "inline $1")
   ("integral constant" "std::integral_constant<$1, $2>")
   ("is same" "std::is_same<$1, $2>::value")
   ("is base of" "std::is_base_of<$1, $2>::value")
   ("left shift" "$1 << $2")
   ("list" "std::list<$1>")
   ("local include" "#include \"$1\"")
   ("main" "int main(int argc, char** argv)\n{\n    $1;\n    return 0;\n}")
   ("make index sequence" "std::make_index_sequence<$1>")
   ("make pair" "std::make_pair($1, $2)")
   ("make shared" "std::make_shared($1)")
   ("make tuple" "std::make_tuple($1)")
   ("make unique" "std::make_unique($1)")
   ("map" "std::map<$1, $2>")
   ("max" "std::max($1, $2)")
   ("member" "$1 _$2;")
   ("method call" "$1.$2($3)")
   ("method def" "$1 $1::$2($3)\n{\n    $4;\n}")
   ("method signature" "$1 $1::$2($3);")
   ("min" "std::min($1, $2)")
   ("move" "std::move($1)")
   ("multi map" "std::multimap<$1, $2>")
   ("namespace" "namespace $1 {\n\n}")
   ("new" "new $1($2)")
   ("optional" "bxxst::optional<$1>")
   ("or" "$1 || $2")
   ("pair" "std::pair<$1, $2>")
   ("L if" "#elif $1")
   ("define" "#define $1")
   ("if define" "#ifdef $1")
   ("if not define" "#ifndef $1")
   ("undef" "#undef $1")
   ("pragma once" "#pragma once")
   ("private" "private $1")
   ("protected" "protected $1")
   ("public" "public $1")
   ("quote include" "#include \"$1\"")
   ("reinterpret cast" "reinterpret_cast<$1>($2)")
   ("return" "return $1;")
   ("right shift" "$1 >> $2")
   ("runtime error" "throw std::runtime_error(\"$1\");")
   ("scope" "$1::$2")
   ("see air" "std::cerr << $1 << std::endl;")
   ("see out" "std::cout << $1 << std::endl;")
   ("set" "std::set<$1>")
   ("shared pointer" "std::shared_ptr<$1>")
   ("size of" "sizeof($1)")
   ("sort" "std::sort($1, $2)")
   ("static assert" "static_assert($1, $2);")
   ("static cast" "static_cast<$1>($2)")
   ("static" "static $1")
   ("string stream" "std::ostringstream o;")
   ("stood" "std::$1")
   ("struct" "struct $1 {\n    $2;\n};")
   ("string" "std::string($1)")
   ("stir" "$1.str()")
   ("C stir" "$1.c_str()")
   ("switch" "switch($1) {\n    case $2:\n        $3;\n        break;\n}")
   ("ternary" "$1 ? $2 : $3")
   ("template class" "template<$0>\nclass $1 : $2\n{\npublic:\n\nprivate:\n\n};")
   ("template function deaf" "template<$0>\n$1 $2($3)\n{\n    $4;\n}")
   ("template index" "template<std::size_t... Is>")
   ("template struct" "template<$0>\nstruct $1 {\n    $2;\n};")
   ("template using" "template<$0>\nusing $1 = $2<$3>;")
   ("template" "template<$1>")
   ("this" "this->$1")
   ("tie" "std::tie($1, $2)")
   ("throw" "throw $1($2);")
   ("throw runtime error" "throw std::runtime_error($2);")
   ("to do" "// TODO: $1")
   ("to string" "std::to_string($1)")
   ("trace" "std::cout << __FILE__ << \":\" << __LINE__ << std::endl;")
   ("err trace" "std::cerr << __FILE__ << \":\" << __LINE__ << std::endl;")
   ("try" "try {\n    $1;\n} catch($2) {\n    $3;\n}")
   ("tuple" "std::tuple<$1>")
   ("type def" "typedef $1 $2;")
   ("type name" "typename $1")
   ("union" "union $1 {\n    $2;\n}")
   ("unique pointer" "std::unique_ptr<$1>")
   ("unordered map" "std::unordered_map<$1, $2>")
   ("using" "using $1 = $2;")
   ("var" "$1 $2;")
   ("variadic class" "class... $1")
   ("variadic type name" "typename... $1")
   ("vector" "std::vector<$1>")
   ("virtual method sig" "virtual $1 $1::$2($3);")
   ("while" "while($1) {\n    $2;\n}")
   ("friend" "friend $1;")
   ("malloc" "malloc($1)")
   ("re-alloc" "realloc($1, $2)")
   ("free" "free($1)")
   ("default" "default:\n    $1;\n    break;")
   ("exit" "std::exit($1);")
   ("memory copy" "std::memcpy($1, $2, $3);")
   ("memory move" "std::memmove($1, $2, $3);")
   ("memory set" "std::memset($1, $2, $3);")
   ("system error" "throw std::system_error(errno, std::system_category());")
   ("go to" "goto $1;")
   ("size" "$1.size()")
   ("empty" "$1.empty()")
   ("bool" "bool($1)")
   ))
