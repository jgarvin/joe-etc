(md-make-snippets
 '(derived-mode-p 'c++-mode)
 '(
   ("arg" "$1, $2")
   ("assign" "$1 = $2;")
   ("auto" "auto $1 = $2;")
   ("boost" "bxxst::")
   ("case" "case $1:\n    $2;\n    break;")
   ("class" "class $1 : $2\n{\npublic:\n\nprivate:\n\n};")
   ("const method sig" "$1 $1::$2($3) const;")
   ("const ref" "const $1&")
   ("const" "const $1")
   ("decl type" "decltype($1)")
   ("deque" "std::deque<$1>")
   ("do while" "do {\n    $1;\n} while($2);")
   ("ellipses" "$1...")
   ("for" "for($1; $2; $3) {\n    $4;\n}")
   ("for each" "for(auto& $1 : $2) {\n    $3;\n}")
   ("forward" "std::forward<$1>($2)")
   ("function signature" "$1 $2($3);")
   ("header guard" "#ifndef $1\n#define $2\n\n$3\n\n#endif")
   ("get" "std::get<$2>($1)")
   ("if" "if($1) {\n    $2;\n}")
   ("include" "#include <$1>")
   ("quote include" "#include \"$1\"")
   ("init var" "$1 $2 = $3;")
   ("inline" "inline $1")
   ("left shift" "$1 << $2")
   ("list" "std::list<$1>")
   ("local include" "#include \"$1\"")
   ("main" "int main(int argc, char** argv)\n{\n    $1;\n    return 0;\n}")
   ("make pair" "std::make_pair($1, $2)")
   ("make shared" "std::make_shared($1)")
   ("make unique" "std::make_unique($1)")
   ("map" "std::map<$1, $2>")
   ("member" "$1 _$2;")
   ("method call" "$1.$2($3)")
   ("method def" "$1 $1::$2($3)\n{\n    $4;\n}")
   ("method signature" "$1 $1::$2($3);")
   ("multi map" "std::multimap<$1, $2>")
   ("namespace" "namespace $1 {\n\n}")
   ("optional" "bxxst::optional<$1>")
   ("pair" "std::pair<$1, $2>")
   ("private" "private $1")
   ("protected" "protected $1")
   ("public" "public $1")
   ("return" "return $1;")
   ("right shift" "$1 >> $2")
   ("see err" "std::cerr << $1 << std::endl;")
   ("see out" "std::cout << $1 << std::endl;")
   ("set" "std::set<$1>")
   ("shared pointer" "std::shared_ptr<$1>")
   ("size of" "sizeof($1)")
   ("static_assert" "static_assert($1, $2);")
   ("stood" "std::$1")
   ("switch" "switch($1) {\n    case $2:\n        $3;\n        break;\n}")
   ("template class" "template<class T>\nclass $1 : $2\n{\npublic:\n\nprivate:\n\n};")
   ("template using" "template<class T>\nusing $1 = $2<T>;")
   ("template" "template<$1>")
   ("typename" "typename $1")
   ("variadic typename" "typename... $1")
   ("variadic class" "class... $1")
   ("this" "this->$1")
   ("type def" "typedef $1 $2;")
   ("tuple" "std::tuple<$1>")
   ("unique pointer" "std::unique_ptr<$1>")
   ("unordered map" "std::unordered_map<$1, $2>")
   ("using" "using $1 = $2;")
   ("var" "$1 $2;")
   ("vector" "std::vector<$1>")
   ("virtual method sig" "virtual $1 $1::$2($3);")
   ("while" "while($1) {\n    $2;\n}")
   ))
