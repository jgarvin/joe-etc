(md-make-snippets
 '(derived-mode-p 'rust-mode)
 '(
   ("as ref" "$1.as_ref()")
   ("zip" "$1.zip($2)")
   ("unimplemented" "std::unimplemented!($1)")
   ("read write lock" "RwLock<$1>")
   ("configuration" "#[cfg($1)]")
   ("test" "#[test]\nfn $1() {\n    $2\n}")
   ("left shift" "$1 << $2")
   ("should panic" "#[should_panic(expected = \"$1\")]")
   ("right shift" "$1 >> $2")
   ("panic" "panic!($1)")
   ("len" "$1.len()")
   ("length" "$1.len()")
   ("hash map" "HashMap<$1, $2>")
   ("hash set" "HashSet<$1>")
   ("lazy static" "lazy_static! {\n    $1\n}")
   ("first" "$1.first()")
   ("last" "$1.last()")
   ("new" "$1::new($2)")
   ("default" "$1::default()")
   ("stood" "std::$1")
   ("option" "Option<$1>")
   ("box" "Box<$1>")
   ("assert" "assert!($1);")
   ("iter" "$1.iter()")
   ("copied" "$1.copied()")
   ("iter mutt" "$1.iter_mut()")
   ("collect" "$1.collect()")
   ("maybe uninit" "MaybeUninit<$1>")
   ("map" "$1.map(|x| $2)")
   ("assert equal" "assert_eq!($1, $2);")
   ("module" "mod $1 {\n    $2\n}")
   ("function" "fn $1($2) -> $3 {\n    $4\n}")
   ("void function" "fn $1($2) {\n    $4\n}")
   ("main" "fn main() {\n    $1\n}")
   ("into" "$1.into()")
   ("print" "println!($1);")
   ("return" "return $1;")
   ("if" "if $1 {\n    $2\n}")
   ("if let" "if let $1 = $2 {\n    $3\n}")
   ("struct" "struct $1 {\n    $2\n}")
   ("union" "union $1 {\n    $2\n}")
   ("enum" "enum $1 {\n    $2\n}")
   ("else" "else {\n    $2\n}")
   ("flat if" "if $1 { $2 } else { $3 }")
   ("let" "let $1 = $2;")
   ("const" "const $1 = $2;")
   ("let mutt" "let mut $1 = $2;")
   ("loop" "loop {\n    $1\n}")
   ("while" "while $1 {\n    $2\n}")
   ("for" "for $1 in $2 {\n    $3\n}")
   ("annotate" "$1: $2")
   ("and" "$1 && $2")
   ("or" "$1 || $2")
   ("trait" "trait $1 {\n    $2\n}")
   ("Imphal" "impl $1 {\n    $2\n}")
   ("impl" "impl $1 {\n    $2\n}")
   ("impill" "impl $1 {\n    $2\n}")
   ("imm paul" "impl $1 {\n    $2\n}")
   ("assign" "$1 = $2;")
   ("a sign" "$1 = $2;")
   ("comment" "// $1")
   ("get" "$1.get()")
   ("set" "$1.set()")
   ("todo" "// TODO: $1")
   ("two do" "// TODO: $1")
   ("as" "$1 as $2")
   ("derive" "#[derive($1)]")
   ("use" "use $1::$2;")
   ("format" "format!($1)")
   ("match" "match $1 {\n    $2 => $3,\n    _ => $4\n}")
   ("unwrap" "$1.unwrap()")
   ("self" "self.$1")
   ("clone" "$1.clone()")
   ("debug" "dbg!($1)")
   ("debug assert" "debug_assert!($1);")
   ("equals" "$1 == $2")
   ("not equal" "$1 != $2")
   ("trace" "dbg!();")
   ("size" "$1.size()")
   ("size of" "std::mem::size_of::<$1>()")
   ("align of" "std::mem::align_of::<$1>()")
   ("mutex guard" "MutexGuard<'$1, $2>")
   ("macro rules" "macro_rules! $1 {\n    ($2) => {$3};\n}")
   ("thread local" "thread_local! {\n    $1\n}")
   ("cell" "Cell<$1>")
   ("ref cell" "RefCell<$1>")
   ("R C" "Rc<$1>")
   ("arc" "Arc<$1>")
   ("vec" "Vec<$1>")
   ("vec deck" "VecDeque<$1>")
   ("type" "type $1 = $2")
   ("stringify" "stringify!($1)")
   ("mutex" "Mutex<$1>")
   ("pin" "Pin<$1>")
   ("once cell" "OnceCell<$1>")
   ("weak" "Weak<$1>")
   ("result" "Result<$1, $2>")
   ("quote" "quote! {\n    $1\n}")
   ("read" "$1.read()")
   ("write" "$1.write()")
   ("unsafe" "unsafe {\n    $1\n}")
   ("chain" "$1.chain($2)")
   ("expect" "$1.expect($2)")
   ("to owned" "$1.to_owned()")
   ("unwrap or" "$1.unwrap_or($2)")
   ("dyn" "dyn $1")
   ("map air" "$1.map_err($2)")
   ("B tree set""BTreeSet<$1>")
   ("B tree map" "BTreeMap<$1, $2>")
   ("non-null" "NonNull<$1>")
   ("non-zero" "NonZero<$1>")
   ("replace" "std::mem::replace($1, $2)")
   ("drop" "drop($1)")
   ("okay" "Ok($1)")
   ("Err" "Err($1)")
   ("Some" "Some($1)")
   ("borrow" "$1.borrow()")
   ("borrow mutt" "$1.borrow_mut()")
   ("borrow mutate" "$1.borrow_mut()")
   ("R W Lock" "RwLock<$1>")
   ("unsafe cell" "UnsafeCell<$1>")
   ("dock hidden" "#[doc(hidden)]")
   ("wrapping" "Wrapping<$1>")
   ("enumerate" "$1.enumerate()")
   ("forget" "std::mem::forget($1)")
   ("sleep" "std::thread::sleep(std::time::Duration::from_millis($1))")
   ("allow" "#[allow($1)]")
   ("deny" "#[deny($1)]")
   ("warn" "#[warn($1)]")
   ("filter" "$1.filter(|x| $2)")
   ("to string" "$1.to_string()")
   ("phantom data" "PhantomData<$1>")
   ("max" "max($1, $2)")
   ("min" "min($1, $2)")
   ("implement dereference" "impl ::core::ops::Deref for $1 {\n    type Target = $2;\n\n    fn deref(&self) -> &Self::Target {\n        $3\n    }\n}")
   ("feature" "#![feature($1)]")
   ("null" "std::ptr::null()")
   ("null mut" "std::ptr::null_mut()")
   ("transpose" "$1.transpose()")
   ("type ID of" "TypeId::of::<$1>()")
))