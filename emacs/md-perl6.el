(md-make-snippets
 '(derived-mode-p 'perl6-mode)
 '(
   ("comment" "# $1")
   ("todo" "# TODO: $1")
   ("say" "say $1;")
   ("note" "note $1;")
   ("Dee Dee" "dd $1;")
   ("print" "print $1;")
   ("put" "put $1;")
   ("power" "$1 ** $2")
   ("flop" "$1 ff $2")
   ("identity equal" "$1 === $2")
   ("deep identity equal" "$1 =:= $2")
   ("has" "has $1")
   ("range" "$1...$2")
   ("reduction" "[$1] $2")
   ("scalar" "my $$1 = $2;")
   ("array" "my @$1 = $2;")
   ("hash" "my %$1 = $2;")
   ("concat" "$1 ~ $2")
   ("smart" "$1 ~~ $2")
   ("and" "$1 && $2")
   ("or" "$1 || $2")
   ("zip" "$1 Z $2")
   ("cross product" "$1 X $2")
   ("elems" "$1.elems")
   ("push" "$1.push($2)")
   ("pop" "$1.pop")
   ("what" "$1.WHAT")
   ("block" "{\n    $1;\n}")
   ("bind" "$1 := $2;")
   ("mutate" "$1.=$2")
   ("not" "not $1")
   ("if" "if $1 {\n    $2;\n}")
   ("unless" "unless $1 {\n    $2;\n}")
   ("elsif" "elsif $1 {\n    $2;\n}")
   ("else" "else {\n    $1;\n}")
   ("with" "with $1 {\n    $2;\n}")
   ("without" "without $1 {\n    $2;\n}")
   ("for" "for $1 -> $2 {\n    $3;\n}")
   ("given" "given $1 {\n    $2\n}")
   ("when" "when $1 {\n    $2;\n}")
   ("default" "default {\n    $1;\n}")
   ("loop" "loop (my $1; $2; $3) {\n    $4;\}")
   ("prompt" "prompt($1)")
   ("open" "open($1, $2)")
   ("sub" "sub $1 ($2) {\n    $3;\n}")
   ("multi" "multi $1 ($2) {\n    $3;\n}")
   ("return" "return $1;")
   ("assign" "$1 = $2;")
   ("class" "class $1 {\n    $2;\n}")
   ("role" "role $1 {\n    $2;\n}")
   ("while" "while $1 {\n    $2;\n}")
   ("until" "until $1 {\n    $2;\n}")
   ("repeat while" "repeat {\n    $1;\n} while $2;")
   ("repeat until" "repeat {\n    $1;\n} until $2;")
   ("item" "$1 => $2")
   ("method" "method $1 ($2) {\n    $3;\n}")
   ("submethod" "submethod $1 ($2) {\n    $3;\n}")
   ("BUILD" "submethod BUILD ($1) {\n    $2;\n}")
   ("is" "$1 is $2")
   ("but" "$1 but $2")
   ("submethod" "submethod $1 ($2) {\n    $3;\n}")
   ("does" "$1 does $2")
   ("catch" "CATCH {\n    $1;\n}")
   ("try" "try {\n    $1;\n}")
   ("die" "die $1;")
   ("new" "$1.new")
   ("ternary" "$1 ?? $2 !! $3")
   ("self" "self.$1")
   ("bless" "self.bless($1)")
   ))